namespace Promact.Erp.Util.StringConstants
{
    public interface IStringConstantRepository
    {

        string EmailSubject { get; }
        string FromDate { get; }
        string EndDate { get; }
        string Reason { get; }
        string Type { get; }
        string Status { get; }
        string ReJoinDate { get; }
        string CreatedOn { get; }
        string WebRequestContentType { get; }
        string DateFormat { get; }
        string ResponseTypeEphemeral { get; }
        string Approved { get; }
        string Button { get; }
        string Rejected { get; }
        string Fallback { get; }
        string Color { get; }
        string AttachmentType { get; }
        string CancelLeaveError { get; }
        string SlackHelpMessage { get; }
        string SlackErrorMessage { get; }
        string Link { get; }
        string Unlink { get; }
        string NotActiveUser { get; }
        string NotTeamLeader { get; }
        string ListOfLinks { get; }
        string ProjectAndTeamLeaderDetail { get; }
        string ProjectTeamLeaderDetail { get; }
        string ProjectLinked { get; }
        string UnLinkFirst { get; }
        string InActiveProject { get; }
        string AlreadyLinked { get; }
        string NotLinkedYet { get; }
        string UnlinkedSuccessfully { get; }
        string  NotLinkedToChannel { get; }
        string NoLinks { get; }
        string Links { get; }
        string NotTeamLeaderOfProject { get; }
        string UsersDetailByChannelNameUrl { get; }
        string UserDetailsByIdUrl { get; }
        string UrlRtmStart { get; }
        string OAuthAuthorizationScopeAndClientId { get; }
        string UserDetailsUrl { get; }
        string TeamLeaderDetailsUrl { get; }
        string ManagementDetailsUrl { get; }
        string OAuthAcessUrl { get; }
        string SlackAuthorize { get; }
        string UserCouldNotBeAdded { get; }
        string ProjectDetailsByUserNameUrl { get; }
        string ProjectDetailUrl { get; }
        string ProjectUsersByTeamLeaderId { get; }
        string ProjectUserDetailsUrl { get; }
        string ProjectTeamLeaderDetailsUrl { get; }
        string ProjectManagementDetailsUrl { get; }
        string UserDetailUrl { get; }
        string ThankYou { get; }
        string InternalError { get; }
        string SlackUserListUrl { get; }
        string ProjectDetailsFromOauthInValidUser { get; }
        string ProjectDetailsFromOauthOneEmployee { get; }
        string ProjectDetailsFromOauthOneInActiveEmployee { get; }

        string ProjectDetailsFromOauthThreeEmployeeInActive { get; }
        string ProjectDetailsFromOauthThreeEmployee { get; }
        string ProjectChannelNotLinked { get; }

        string SlackChannelListUrl { get; }
        string SlackGroupListUrl { get; }
        string TaskMailBotStatusErrorMessage { get; }
        string TaskMailBotHourErrorMessage { get; }
        string TaskMailDescription { get; }
        string TaskMailHours { get; }
        string TaskMailComment { get; }
        string TaskMailStatus { get; }
        string StartBot { get; }
        string ScrumHalt { get; }
        string ScrumHalted { get; }
        string ScrumAlreadyHalted { get; }
        string ScrumResume { get; }
        string Scrum { get; }
        string ScrumResumed { get; }
        string AnswerToday { get; }
        string ScrumNotHalted { get; }
        string ScrumHelp { get; }
        string ScrumHelpMessage { get; }
        string NotAUser { get; }
        string NotAProject { get; }
        string Leave { get; }
        string Later { get; }
        string LeaveError { get; }
        string ResumeScrum { get; }
        string SlackAppAdded { get; }
        string SlackAuthError { get; }
        string SlackAppError { get; }
        string LoggerErrorMessageHomeControllerAuthorizeStatusPage { get; }
        string LoggerErrorMessageOAuthControllerSlackDetailsAdd { get; }
        string PreviousDayStatus { get; }
        string PreviousDayScrumAnswer { get; }
        string InActiveProjectDetailsFromOauthInActiveUser { get; }
        string NameFormat { get; }
        string AnswerNotRecorded { get; }
        string UserNotInOAuthOrProject { get; }
        string ScrumBotToken { get; }
        string ScrumBotName { get; }
        string LoggerScrumBot { get; }
        string LoggerTaskMailBot { get; }
        string ScrumLaterDone { get; }
        string AlreadyAnswered { get; }
        string NotExpected { get; }
        string ScrumIsHalted { get; }
        string NoSlackDetails { get; }
        string ScrumCannotBeHalted { get; }
        string ScrumCannotBeResumed { get; }
        string ProjectDetailsFromOauthInActiveUser { get; }
        string ProjectInActive { get; }
        string ScrumInProgress { get; }
        string EmployeesListFromOauthThreeEmployeesInActive { get; }
        string SlackUserNotFound { get; }
        string UserNotInSlack { get; }
        string NotInSlackOrNotExpectedUser { get; }

        string InValidStartCommand { get; }
        string InActiveEmployeesList { get; }
        string EmployeesListFromOauthOneEmployee { get; }
        string EmployeesListFromOauthThreeEmployees { get; }
        string ThirdUserSlackUserId { get; }
        string UserNotInProject { get; }
        string NoQuestion { get; }
        string NoEmployeeFound { get; }
        string MarkedInActive { get; }
        string Unrecognized { get; }
        string UserChange { get; }
        string ChannelCreated { get; }
        string ChannelArchive { get; }
        string GroupArchive { get; }
        string ChannelRename { get; }
        string GroupRename { get; }
        string ListLinks { get; }

        string NoProjectFound { get; }
        string ScrumComplete { get; }
        string ScrumNotStarted { get; }
        string ScrumAlreadyConducted { get; }
        string GoodDay { get; }
        string Time { get; }
        string PleaseAnswer { get; }
        string AllAnswerRecorded { get; }
        string NotLaterYet { get; }
        string SendTaskMailConfirmationErrorMessage { get; }
        string RequestToStartTaskMail { get; }
        string AlreadyMailSend { get; }
        string TaskMailSubject { get; }
        string FirstNameForTest { get; }
        string AccessTokenForTest { get; }
        string EmailForTest { get; }
        string StringIdForTest { get; }
        string LastNameForTest { get; }
        string UserDetailsFromOauthServer { get; }
        string SlashCommandText { get; }
        string PromactStringName { get; }
        string FirstQuestionForTest { get; }
        string TeamLeaderDetailsFromOauthServer { get; }
        string CommentAndDescriptionForTest { get; }
        string ManagementDetailsFromOauthServer { get; }
        string TaskMailReport { get; }
        string ListOfEmployeeForTeamLeader { get; }
        string EmployeeInformation { get; }
        string TaskMailReportTeamLeader { get; }
        string TeamLeaderEmailForTest { get; }
        string ManagementFirstForTest { get; }
        string ManagementEmailForTest { get; }
        string LeaveReasonForTest { get; }
        string LeaveTypeForTest { get; }
        string ChannelId { get; }
        string ChannelName { get; }
        string ChannelAddInstruction { get; }
        string ProjectNotInOAuth { get; }
        string GroupNameStartsWith { get; }
        string OnlyPrivateChannel { get; }
        string ChannelAddSuccess { get; }
        string Add { get; }
        string Channel { get; }
        string Command { get; }
        string ResponseUrl { get; }
        string TeamDomain { get; }
        string OAuthProjName { get; }
        string TeamId { get; }
        string Text { get; }
        string Token { get; }
        string UserId { get; }
        string UserName { get; }
        string LeaveBot { get; }
        string UnderConstruction { get; }
        string Hello { get; }
        string All { get; }
        string LinkTest { get; }
        string LinkChannelNoName { get; }
        string UnlinkCommand { get; }
        string UnlinkTest { get; }
        string ProjectTeamLeaderInActiveDetail { get; }
        string OAuthProjectName { get; }
        string InActiveProjectTeamLeaderDetail { get; }
        string StringHourForTest { get; }
        string AfterLogIn { get; }
        string Home { get; }
        string Index { get; }
        string WebConfig { get; }
        string MailSetting { get; }
        string SlackChatUpdateUrl { get; }
        string ProjectUserUrl { get; }
        string ProjectUrl { get; }
        string UserUrl { get; }
        string OAuthUrl { get; }
        string ClientReturnUrl { get; }
        string LeaveManagementAuthorizationUrl { get; }
        string ChatPostUrl { get; }
        string SlashCommandLeaveListErrorMessage { get; }
        string SlashCommandLeaveCancelErrorMessage { get; }
        string SlashCommandLeaveStatusErrorMessage { get; }
        string Host { get; }
        string Port { get; }
        string TokenEmpty { get; }
        string ErrorMsg { get; }
        string ErrorMsgNewPrivateChannel { get; }
        string MailUserName { get; }
        string Password { get; }
        string EnableSsl { get; }
        string IncomingWebHookUrl { get; }
        string TaskmailAccessToken { get; }
        string SlackOAuthClientId { get; }
        string SlackOAuthClientSecret { get; }
        string PromactOAuthClientId { get; }
        string PromactOAuthClientSecret { get; }
        string LoggerErrorMessageLeaveRequestControllerSlackRequest { get; }
        string LoggerErrorMessageLeaveRequestControllerSlackButtonRequest { get; }
        string LoggerErrorMessageHomeControllerExtrenalLogin { get; }
        string LoggerErrorMessageHomeControllerSlackOAuthAuthorization { get; }
        string LoggerErrorMessageHomeControllerExtrenalLoginCallBack { get; }
        string LoggerErrorMessageHomeControllerLogoff { get; }
        string LoggerErrorMessageOAuthControllerRefreshToken { get; }
        string LoggerErrorMessageOAuthControllerSlackOAuth { get; }
        string LoggerErrorMessageOAuthControllerSlackEvent { get; }
        string LoggerErrorMessageTaskMailBot { get; }
        string SlackBotName { get; }
        string CasualLeaveUrl { get; }
        string CasualLeaveResponse { get; }
        string SlackChannelIdForTest { get; }
        string MessageTsForTest { get; }
        string SorryYouCannotApplyLeave { get; }
        string LeaveListCommandForTest { get; }
        string LeaveCancelCommandForTest { get; }
        string Cancel { get; }
        string FalseStringNameForTest { get; }
        string LeaveNoUserErrorMessage { get; }
        string LeaveBalanceReplyTextForTest { get; }
        string OrElseString { get; }
        string Admin { get; }
        string Employee { get; }
        string TeamLeader { get; }
        string EmptyString { get; }
        string VerificationUrl { get; }
        string TeamJoin { get; }
        string SlackOAuthResponseText { get; }
        string AccessTokenSlack { get; }
        string UserDetailsResponseText { get; }
        string ChannelDetailsResponseText { get; }
        string GroupDetailsResponseText { get; }
        string List { get; }
        string WrongLeaveCancelCommandForTest { get; }
        string LeaveStatusTestForOwn { get; }
        string SecondQuestionForTest { get; }
        string ThirdQuestionForTest { get; }
        string ForthQuestionForTest { get; }
        string FifthQuestionForTest { get; }
        string SixthQuestionForTest { get; }
        string SeventhQuestionForTest { get; }
        string YouAreNotInExistInOAuthServer { get; }
        string HourSpentForTest { get; }
        string StatusOfWorkForTest { get; }
        string SendEmailYesForTest { get; }
        string SendEmailNoForTest { get; }
        string NotTypeOfLeave { get; }
        string DateFormatErrorMessage { get; }
        string ErrorWhileSendingEmail { get; }
        string UserIsAdmin { get; }
        string LeaveDoesnotExist { get; }
        string AdminErrorMessageUpdateSickLeave { get; }
        string True { get; }
        string LeaveStatusCommandForTest { get; }
        string LeaveBalanceTestForOwn { get; }
        string LeaveHelpTestForOwn { get; }
        string LeaveBalanceSickReplyTextForTest { get; }
        string SlashCommandTextSick { get; }
        string SlashCommandTextSickForUser { get; }
        string NameForTest { get; }
        string RequestToEnterProperAction { get; }
        string SlashCommandTextErrorLeaveType { get; }
        string SlashCommandTextErrorDateFormatSick { get; }
        string SlashCommandTextErrorDateFormatCasual { get; }
        string SlashCommandTextCasual { get; }
        string SlashCommandUpdate { get; }
        string SlashCommandUpdateDateError { get; }
        string SlashCommandUpdateWrongId { get; }
        string SickLeaveDoesnotExist { get; }
        string UpdateEnterAValidLeaveId { get; }
        string SlashCommandUpdateInValidId { get; }
        string ErrorOfEmailServiceFailureTaskMail { get; }
        string AdminErrorMessageApplySickLeave { get; }
        string UserNotFound { get; }
        string BotNotFound { get; }
        string PersonNotAvailable { get; }
        string FormatForDate { get; }
        string ScrumFirstQuestion { get; }
        string ScrumSecondQuestion { get; }
        string ScrumThirdQuestion { get; }
        string AllProjectUrl { get; }
        string GetProjectDetails { get; }
        string Start { get; }

        #region String Constants for Test Cases

        string InActiveProjectDetailsFromOauth { get; }
        string UserNameForTest { get; }
        string GroupName { get; }
        string AnswerStatement { get; }
        string ChannelIdForTest { get; }
        string PhoneForTest { get; }
        string ScrumQuestionForTest { get; }
        string ChannelNameForTest { get; }
        string ProjectDetailsFromOauth { get; }
        string EmployeeDetailsFromOauth { get; }
        string EmployeesListFromOauth { get; }
        string UserBySlackUserName { get; }
        string UserBySlackUserNameForLeaveApplicant { get; }
        string UserIdForTest { get; }
        string TestUser { get; }
        string scrumAnswerForTest { get; }
        int ProjectIdForTest { get; }
        string Halt { get; }
        string Resume { get; }
        string AlreadyMarkedAsAnswered { get; }
        string TeamLeaderIdForTest { get; }
        string EmployeeIdForTest { get; }
        string TestAccessToken { get; }
        string TestUserName { get; }
        string TestUserNameFalse { get; }
        string FirstUserName { get; }
        string FirstUserNameFalse { get; }
        string ProjectUsers { get; }
        string TeamLeaderDetailFromOauthServer { get; }
        string EmployeeDetailFromOauthServer { get; }
        string IdForTest { get; }
        string TestUserId { get; }
        string NextQuestion { get; }
        string QuestionToNextEmployee { get; }
        string PreviousDayStatusForTest { get; }
        string AdminLogin { get; }
        string TeamLeaderLogin { get; }
        string EmployeeLogin { get; }
        string TeamLeaderLoginDetails { get; }
        string ProjectDetail { get; }
        string ProjectDetailsForAdminFromOauth { get; }
        string ProjectDetailsForTeamLeaderFromOauth { get; }
        string ProjectDetailsForEmployeeFromOauth { get; }
        string TestAnswer { get; }
        string TestId { get; }
        string TestGroupName { get; }
        string TestQuestion { get; }
        string EmployeesListFromOauthInValid { get; }
        string UnExpectedInActiveUser { get; }
        string EmployeesListInValid { get; }
        string InActiveInOAuth { get; }
        string OAuthUserDetails { get; }
        string InValidOAuthUsers { get; }
        string WrongActionSlashCommand { get; }
        string LeaveWrongCommandForBackDateCL { get; }
        string LeaveWrongCommandForBeyondDateFirstExample { get; }
        string LeaveWrongCommandForBeyondDateSecondExample { get; }
        string LeaveWrongCommandForBackDateSL { get; }
        string SlashCommandUpdateForBeyondStartDateFirstExample { get; }
        string SlashCommandUpdateForBeyondStartDateSecondExample { get; }
        string LeaveCommand { get; }

        #endregion

        string RoleAdmin { get; }
        string RoleTeamLeader { get; }
        string RoleEmployee { get; }

        string TeamMembersUrl { get; }
        string UserRoleUrl { get; }

        string NotAvailable { get; }
        string NextPage { get; }
        string Previouspage { get; }
        string HourLimitExceed { get; }
        string StartWorking { get; }
        string HourSpentForTesting { get; }
        string HourSpentExceeded { get; }
        string BackDateErrorMessage { get; }
        string InValidDateErrorMessage { get; }
        string JsonContentString { get; }
        string UserSlackId { get; }
        string TeamLeaderSlackId { get; }
        string ManagementSlackId { get; }
        string Ok { get; }
        string LeaveAllowed { get; }
        string LeaveAlreadyExistOnSameDate { get; }
        string ReplyTextForUpdateLeave { get; }
        string ReplyTextForCasualLeaveList { get; }
        string ReplyTextForSickLeaveList { get; }
        string ReplyTextForCancelLeave { get; }
        string ReplyTextForErrorInCancelLeave { get; }
        string ReplyTextForCasualLeaveStatus { get; }
        string ReplyTextForSickLeaveStatus { get; }
        string ReplyTextForCasualLeaveBalance { get; }
        string ReplyTextForSickLeaveBalance { get; }
        string ReplyTextForSickLeaveUpdate { get; }
        string ReplyTextForSMTPExceptionErrorMessage { get; }
        string SlashCommandErrorMessage { get; }
        string ReplyTextForCasualLeaveApplied { get; }
        string ReplyTextForSickLeaveApplied { get; }
        string UpdateMessageUrl { get; }
        string AtTheRate { get; }
        string SlackOauthRequestUrl { get; }
        string SlackUserDetailsUrl { get; }
        string EmployeeFirstLastNameFormat { get; }
        string FirstAndSecondIndexStringFormat { get; }
        string FirstSecondAndThirdIndexStringFormat { get; }
        string StringValueOneForTest { get; }
        string StringValueFiftyFiveForTest { get; }
        string ControllerErrorMessageStringFormat { get; }
        string ExternalLoginUrl { get; }
        string SlackAuthorizeAction { get; }
        string Default { get; }
        string CasualLeaveUpdateMessageForUser { get; }
        string AlreadyUpdatedMessage { get; }
        string LeaveUpdateResponseJsonString { get; }
        string Payload { get; }
        string LeaveUpdateEmailStringFormat { get; }
        string RequestToAddSlackApp { get; }
        string Star { get; }
        string HttpRequestExceptionErrorMessage { get; }
        string Space { get; }
        string UserDetailsFromOauthServerFalse { get; }
        string TaskMailMaximumTime { get; }
        string Scopes { get; }
        string AuthenticationType { get; }
        string AuthenticationTypeOidc { get; }
        string ResponseType { get; }
        string Scope { get; }
        string RedirectUrl { get; }
        string Sub { get; }
        string Email { get; }
        string SlackUserID { get; }
        string RoleClaimType { get; }
        string NameClaimType { get; }
        string Bearer { get; }
        string TaskModule { get; }
        string ScrumModule { get; }
        string LeaveModule { get; }
        string Management { get; }
        string TestEmail { get; }
        string SecondTestEmail { get; }
        string TeamLeaderGroup { get; }
        string ManagementGroup { get; }
        string TeamMembersGroup { get; }
        string EmailListForGroup { get; }
        string DetailsAndSlashForUrl { get; }
        string UserDetailsNotFound { get; }

        #region Redmine
        string RedmineBaseUrl { get; }
        string RequestToEnterProperRedmineAction { get; }
        string RedmineHelp { get; }
        string RedmineApiKey { get; }
        string RedmineProjectListAssignToMeUrl { get; }
        string NoProjectFoundForUser { get; }
        string ProperRedmineIssueAction { get; }
        string ProperProjectId { get; }
        string RedmineIssueListAssignToMeByProjectIdUrl { get; }
        string ProjectDoesNotExistForThisId { get; }
        string ErrorInCreatingIssue { get; }
        string JsonApplication { get; }
        string IssueSuccessfullyCreatedMessage { get; }
        string RedmineIssueUrl { get; }
        string NoUserFoundInProject { get; }
        string IssueDoesNotExist { get; }
        string IssueDetailsUrl { get; }
        string RedmineIssueUpdateUrl { get; }
        string IssueUrl { get; }
        string ErrorInUpdateIssue { get; }
        string IssueSuccessfullUpdated { get; }
        string TimeEntryUrl { get; }
        string HourIsNotNumericMessage { get; }
        string TimeEntryActivityErrorMessage { get; }
        string TimeEnrtyAddSuccessfully { get; }
        string ErrorInAddingTimeEntry { get; }
        string RedmineIssueMessageFormat { get; }
        string RedminePriorityErrorMessage { get; }
        string RedmineStatusErrorMessage { get; }
        string RedmineTrackerErrorMessage { get; }
        string UserByProjectIdUrl { get; }
        string RedmineTimeEntryDateFormat { get; }
        string RedmineWrongActionCommand { get; }
        string RedmineCommandProjectList { get; }
        string RedmineWrongIssueActionCommand { get; }
        string RedmineCommandIssueListWrongProjectId { get; }
        string RedmineCommandIssueList { get; }
        string RedmineCommandCreateWrongPriority { get; }
        string RedmineCommandCreateWrongStatus { get; }
        string RedmineCommandCreateWrongTracker { get; }
        string RedmineCommandCreateWrongProjectId { get; }
        string RedmineCommandCreate { get; }
        string RedmineCommandChangeAssign { get; }
        string RedmineCommandIssueClose { get; }
        string RedmineTimeEntryWrongIssueId { get; }
        string RedmineTimeEntry { get; }
        string RedmineTimeEntryHourFormatCommand { get; }
        string RedmineTimeEntryDateFormatCommand { get; }
        string RedmineTimeEntryTimeEntryActivityFormatCommand { get; }
        string RedmineCommandHelp { get; }
        string RedmineApiKeyIsNull { get; }
        string RedmineKeyAddSuccessfully { get; }
        string PleaseEnterValidAPIKey { get; }
        string RedmineAPIKeyCommand { get; }
        string RedmineProjectListFormat { get; }
        #endregion

        string TaskMailRestartSuggestionMessage { get; }
        string EighthQuestionTaskMail { get; }
        string TaskMailUserViewBodyFormat { get; }
        string TaskMailUserViewHeaderFormat { get; }
        string LeaveManagementBotAccessToken { get; }
        string IncorrectLeaveCancelCommandMessage { get; }
        string ProperActionErrorMessage { get; }
        string LeaveBotDoesNotUnderStandErrorMessage { get; }
        string EndDateBeyondStartDateErrorMessage { get; }
        string RejoinDateBeyondEndDateErrorMessage { get; }
        string LeaveDoesNotExistErrorMessage { get; }
        string LeaveCancelSuccessfulMessage { get; }
        string LeaveDoesNotExistErrorMessageWithLeaveIdFormat { get; }
        string LeaveCancelCommandErrorFormatMessage { get; }
        string LeaveHelpBotCommands { get; }
        string LeaveStatusAlreadyUpdatedErrorMessge { get; }
        string LeaveListForOtherErrorMessage { get; }
        string UserIsNotAllowedToListOtherLeaveDetailsMessage { get; }
        string MessageToRequestToAddToSlackOtherUser { get; }
        string UserNotFoundRequestToAddToSlackOtherUser { get; }
        string LeaveUpdateMessage { get; }
        string LeaveUpdateLeaveIdErrorFormatErrorMessage { get; }
        string LeaveUpdateFormatMessage { get; }
        string RejoinDateMessage { get; }
        string EndDateMessage { get; }
        string DateFormatError { get; }
        string FirstQuestionLeaveManagement { get; }
        string SecondQuestionLeaveManagement { get; }
        string ThirdQuestionLeaveManagement { get; }
        string FourthQuestionLeaveManagement { get; }
        string FifthQuestionLeaveManagement { get; }
        string SixthQuestionLeaveManagement { get; }
        string LeaveApplyCommand { get; }
        string ManagementIdForTest { get; }
        string LeaveCancelUnAuthorizeErrorMessage { get; }
        string LeaveUpdatedMessage { get; }
        string LeaveProcessWrongCommand { get; }
        string LeaveListCommand { get; }
        string LeaveCancelCommand { get; }
        string LeaveStatusCommand { get; }
        string LeaveBalanceCommand { get; }
        string LeaveHelpCommand { get; }
        string InActiveUserErrorMessage { get; }
        string UserIdPattern { get; }
        string LeaveUpdateFormatErrorMessage { get; }
        string LeaveUpdateCommandWrongFormatForTest { get; }
        string ReplyTextForSickLeaveListWithoutEndDate { get; }
        string TaskMailDateFormat { get; }
        string TaskMailSubjectIndexFormat { get; }
        string Hyphen { get; }
        string InProgress { get; }
        string Completed { get; }
        string RoadBlock { get; }
        string FromMailAddressForTaskMailBot { get; }
        string PointUserUsingAtTheRate { get; }
        string SessionExpiredMessage { get; }
        string ExceptionMessageBugCreate { get; }
    }
}
